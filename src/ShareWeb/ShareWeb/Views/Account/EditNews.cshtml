@model ShareWeb.Models.User
@{
    ViewBag.Title = Model.NickName ?? Model.SNo;
}


<div class="row">
    <div class="col-lg-8">
        <div class="panel panel-default">
            <div class="panel-heading">
                <i class="fa fa-wrench fa-fw"></i> 编辑个人信息
            </div>
            <!-- /.panel-heading -->
            <div class="panel-body">
                @using (Html.BeginForm("EditNews", "Account", FormMethod.Post, new { role = "form" }))
                {
                    @Html.AntiForgeryToken()

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)

                        <div class="form-group">
                            @Html.LabelFor(model => model.NickName)
                            @Html.EditorFor(model => model.NickName, new { htmlAttributes = new { @class = "form-control", placeholder = "昵称" } })
                            @Html.ValidationMessageFor(model => model.NickName, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Introduce)
                            @Html.TextAreaFor(model => model.Introduce, 4, 10, new { @class = "form-control", placeholder = "个人简介" })
                            @Html.ValidationMessageFor(model => model.Introduce, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.QQ)
                            @Html.EditorFor(model => model.QQ, new { htmlAttributes = new { @class = "form-control", placeholder = "QQ" } })
                            @Html.ValidationMessageFor(model => model.QQ, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email)
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "邮箱" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Tel)
                            @Html.EditorFor(model => model.Tel, new { htmlAttributes = new { @class = "form-control", placeholder = "电话" } })
                            @Html.ValidationMessageFor(model => model.Tel, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.WeChat)
                            @Html.EditorFor(model => model.WeChat, new { htmlAttributes = new { @class = "form-control", placeholder = "微信" } })
                            @Html.ValidationMessageFor(model => model.WeChat, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.MicroBlog)
                            @Html.EditorFor(model => model.MicroBlog, new { htmlAttributes = new { @class = "form-control", placeholder = "微博地址" } })
                            @Html.ValidationMessageFor(model => model.MicroBlog, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Blog)
                            @Html.EditorFor(model => model.Blog, new { htmlAttributes = new { @class = "form-control", placeholder = "博客地址" } })
                            @Html.ValidationMessageFor(model => model.Blog, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.GitHub)
                            @Html.EditorFor(model => model.GitHub, new { htmlAttributes = new { @class = "form-control", placeholder = "GitHub地址" } })
                            @Html.ValidationMessageFor(model => model.GitHub, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Code)
                            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", placeholder = "验证码" } })
                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <img class="codePic" src="/Account/GetAuthCode" width="100" height="30">
                            &nbsp;&nbsp;看不清? <a href="#" class="verifyCode">换一张!</a>
                        </div>

                        <input type="submit" value="提交" class="btn btn-default" />
                }
            </div>
            <!-- /.panel-body -->
        </div>
    </div>
    <!-- /.col-lg-8 -->
    <div class="col-lg-4">
        <div class="panel panel-default">
            <div class="panel-heading">
                <i class="glyphicon glyphicon-paperclip fa-fw"></i> 温馨提示
            </div>
            <!-- /.panel-heading -->
            <div class="panel-body">
                个人简介支持MarkDown语法；<br />
                详细准确的信息方便其他人和你讨论你所上传的项目相关的问题!
            </div>
            <!-- /.panel-body -->
        </div>
        <!-- /.panel -->
    </div>
    <!-- /.col-lg-4 -->
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
}
